{"version":3,"sources":["components/NameDescription.js","components/Image.js","components/NavigationBar.js","components/Header.js","components/projectCard.js","components/projects.js","components/aboutMeCard.js","components/resumeCard.js","components/contactCard.js","components/Body.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NameDescription","className","href","Image","props","style","width","height","alt","src","process","url","NavigationBar","title","value","map","option","key","data-div_id","onClick","handleInputValue","Header","backgroundColor","needHandlerToBePassedToNavigationBar","ProjectCard","counter","id","project","type","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","description","deploy_link","github_link","pictureurl","pictureUrl","Projects","projects","AboutMe","backgroundImage","backgroundRepeat","backgoundPosition","backgroundSize","fontSize","Resume","Contact","htmlFor","placeholder","required","rows","role","data-dismiss","aria-label","aria-hidden","Body","selection","Footer","App","useState","currentSelection","setCurrentSelection","background","e","preventDefault","currentTarget","dataset","div_id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wjKA0BeA,EAxBS,WACtB,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,2CAAb,gBACA,uBAAGA,UAAU,2CAAb,0BAIF,yBAAKA,UAAU,SACb,uBACEA,UAAU,MACVC,KAAK,sDAFP,UAMA,uBAAGD,UAAU,MAAMC,KAAK,oCAAxB,aCJOC,EAbD,SAACC,GACb,OACE,6BAEI,yBAAKC,MAAO,CAACC,MAAM,QAAQC,OAAO,SAChCN,UAAU,+CACVO,IAAI,GACJC,IAAKC,eAAyBN,EAAMO,QCmB/BC,EAzBO,SAACR,GAEnB,OACE,yBAAKH,UAAU,OAFD,CAAC,CAACY,MAAM,WAAWC,MAAM,WAAW,CAACD,MAAM,SAASC,MAAM,UAAU,CAACD,MAAM,YAAYC,MAAM,YAAY,CAACD,MAAM,UAAUC,MAAM,YAGnIC,KAAI,SAAAC,GAAM,OAAI,yBAAKC,IAAKD,EAAOF,MAAOb,UAAU,yDAAyDiB,cAAaF,EAAOF,MAAQK,QAASf,EAAMgB,kBAAmBJ,EAAOH,YCgBhLQ,EAjBA,SAACjB,GACd,OACE,yBAAKH,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CAAOU,IAAK,uBAEd,yBAAKV,UAAU,SACb,yBAAKI,MAAO,CAACiB,gBAAgB,YAC3B,kBAAC,EAAD,OAEF,yBAAKrB,UAAU,kBACb,kBAAC,EAAD,CAAemB,iBAAkBhB,EAAMmB,2C,OCiClCC,EA9CK,SAACpB,GACnB,IAAIqB,EAAU,EACd,OACE,yBAAKxB,UAAU,QACb,yBAAKyB,GAAI,UAAYtB,EAAMuB,QAAQD,IACjC,4BACEzB,UAAU,+CACV2B,KAAK,SACLC,cAAY,WACZC,cAAa,YAAc1B,EAAMuB,QAAQD,GACzCK,gBAAc,OACdC,gBAAe,WAAa5B,EAAMuB,QAAQD,IAEzCtB,EAAMuB,QAAQd,QAGnB,yBACEa,GAAI,WAAatB,EAAMuB,QAAQD,GAC/BzB,UAAU,WACVgC,kBAAiB,UAAY7B,EAAMuB,QAAQD,GAC3CQ,cAAY,qBAEZ,yBAAKjC,UAAU,aACb,2BAAIG,EAAMuB,QAAQQ,aAClB,yBAAKlC,UAAU,OACb,uBAAGA,UAAU,UAAb,SAEE,uBAAGC,KAAME,EAAMuB,QAAQS,YAAanC,UAAU,gBAA9C,WAGA,uBAAGC,KAAME,EAAMuB,QAAQU,YAAapC,UAAU,gBAA9C,YAKJ,yBAAKA,UAAU,OACZG,EAAMuB,QAAQW,WAAWvB,KAAI,SAACwB,GAAD,OAC5B,kBAAC,EAAD,CAAOtB,IAAKsB,EAAad,IAAWd,IAAK4B,YC9BxCC,EANE,WACf,OAAO,yBAAKvC,UAAU,YAAYyB,GAAG,oBAClCe,EAAS1B,KAAK,SAAAY,GAAO,OAAI,kBAAC,EAAD,CAAaV,IAAKU,EAAQD,GAAIC,QAASA,SC+CtDe,EAnDC,WACd,OACE,yBACErC,MAAO,CACLsC,gBAAgB,OAAD,OAAS,SAAT,KACfC,iBAAkB,YAClBC,kBAAmB,SACnBC,eAAgB,QAChBvC,OAAQ,QAEVN,UAAU,6BACVyB,GAAG,QAEH,wBAAIzB,UAAU,yCAAd,YACA,yBAAKA,UAAU,aACb,uBACEI,MAAO,CAAE0C,SAAU,QACnB9C,UAAU,2CAFZ,mBAMA,uBACEI,MAAO,CAAE0C,SAAU,QACnB9C,UAAU,gCAFZ,kIAOA,uBACEI,MAAO,CAAE0C,SAAU,QACnB9C,UAAU,gCAFZ,64BCjBO+C,EAXA,WACb,OACE,yBAAK3C,MAAO,CAACE,OAAO,UAClB,2BACEF,MAAO,CAACC,MAAM,OAAOC,OAAO,QAC5BE,IAAKC,kCACLkB,KAAK,sBC4BEqB,EAnCC,WACZ,OAEA,yBAAKhD,UAAU,OAAOyB,GAAG,QACrB,wBAAIzB,UAAU,eAAd,WACA,yBAAKA,UAAU,aACX,8BACA,yBAAKA,UAAU,cACX,2BAAOiD,QAAQ,QAAf,QACA,2BAAOtB,KAAK,OAAO3B,UAAU,eAAeyB,GAAG,OAAOyB,YAAY,YAAYC,UAAQ,KAE1F,yBAAKnD,UAAU,cACX,2BAAOiD,QAAQ,SAAf,UACA,2BAAOtB,KAAK,QAAQ3B,UAAU,eAAeyB,GAAG,QAAQyB,YAAY,mBAAmBC,UAAQ,KAEnG,yBAAKnD,UAAU,cACX,2BAAOiD,QAAQ,WAAf,WACA,2BAAOtB,KAAK,OAAO3B,UAAU,eAAeyB,GAAG,UAAUyB,YAAY,UAAUC,UAAQ,KAE3F,yBAAKnD,UAAU,cACX,2BAAOiD,QAAQ,WAAf,WACA,8BAAUjD,UAAU,eAAeyB,GAAG,UAAU2B,KAAK,IAAID,UAAQ,KAErE,4BAAQxB,KAAK,SAAS3B,UAAU,eAAeyB,GAAG,iBAAlD,UACA,yBAAKzB,UAAU,kDAAkDqD,KAAK,QAAQ5B,GAAG,eAC7E,4DADJ,+DAEI,4BAAQE,KAAK,SAAS3B,UAAU,QAAQsD,eAAa,QAAQC,aAAW,QAAQ9B,GAAG,aAC/E,0BAAM+B,cAAY,QAAlB,cCULC,EAhCF,SAACtD,GACZ,MAAwB,YAApBA,EAAMuD,UAEN,6BACE,kBAAC,EAAD,OAI0B,aAApBvD,EAAMuD,UAEd,6BACE,kBAAC,EAAD,OAGyB,WAApBvD,EAAMuD,UAEb,6BACE,kBAAC,EAAD,OAIuB,YAApBvD,EAAMuD,UAEX,6BACE,kBAAC,EAAD,YAHD,GChBQC,EATA,WACb,OACE,yBAAKvD,MAAO,CAACiB,gBAAgB,UAAUf,OAAO,QAASN,UAAU,eACjE,uBAAGA,UAAU,0BAAb,8BC2BW4D,EA1BJ,WAAM,IAAD,EAEgCC,mBAAS,WAFzC,mBAETC,EAFS,KAESC,EAFT,KASd,OACE,yBAAK/D,UAAU,OACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,WAAWI,MAAO,CAAC4D,WAAY,YAC5C,kBAAC,EAAD,CAAQ1C,qCATgB,SAAC2C,GAC/BA,EAAEC,iBACFH,EAAoBE,EAAEE,cAAcC,QAAQC,YAStC,yBAAKrE,UAAU,WACb,kBAAC,EAAD,CAAM0D,UAAYI,KAEpB,6BACE,kBAAC,EAAD,UCbUQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5b6ab181.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NameDescription = () => {\r\n  return (\r\n    <div className=\"row pt-5 pb-5 \">\r\n      <div className=\"col-9 \">\r\n        <p className=\"pl-5 text-left text-dark h1 font-italic\">Preeti Gupta</p>\r\n        <p className=\"pl-5 text-left h4 text-info font-italic\">\r\n          Aspring Web Developer\r\n        </p>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <a\r\n          className=\"p-1\"\r\n          href=\"https://www.linkedin.com/in/preetigupta-59a5641ab/\"\r\n        >\r\n          Linked\r\n        </a>\r\n        <a className=\"p-1\" href=\"https://github.com/preeti1234567\">\r\n          Github\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameDescription;\r\n","import React from \"react\";\r\nconst Image = (props) => {\r\n  return (\r\n    <div>\r\n      {\r\n        <img style={{width:\"250px\",height:\"250px\"}}\r\n          className=\"rounded  img-fluid img-thumbnail float-left \"\r\n          alt=\"\"\r\n          src={process.env.PUBLIC_URL + props.url}\r\n        ></img>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Image;\r\n","import React from 'react';\r\n\r\nconst NavigationBar = (props) =>{\r\n    const options = [{title:'About Me',value:'aboutMe'},{title:'Resume',value:'resume'},{title:'Portfolio',value:'projects'},{title:'Contact',value:'contact'}];\r\n    return(\r\n      <div className=\"row\">\r\n        {options.map(option => <div key={option.value} className=\"col-3 btn btn-outline-secondary text-center text-white\" data-div_id={option.value}  onClick={props.handleInputValue}>{option.title}</div>)}\r\n      </div> \r\n        // <div className=\"row p-3\">\r\n           \r\n        //     <a className=\"navigation col text-white\" href='aboutMe'  onClick={props.handleInputValue} >\r\n        //       About Me\r\n        //     </a>\r\n        //         <a className=\"navigation col text-white\" href='resume' onClick={props.handleInputValue}>\r\n        //         Resume\r\n        //     </a>\r\n        //     <a className=\"navigation col text-white\" href='projects' onClick={props.handleInputValue}>\r\n        //       Projects\r\n        //     </a>\r\n        //     <a className=\"navigation col text-white\" href='contact' onClick={props.handleInputValue}>\r\n        //       Contact\r\n        //     </a>\r\n        // </div>\r\n        \r\n\r\n    );\r\n}\r\nexport default NavigationBar;\r\n\r\n\r\n","import React from \"react\";\r\nimport NameDescription from \"./NameDescription\";\r\nimport Image from \"./Image.js\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <Image url={\"images/preeti.jpg\"}/>\r\n      </div>\r\n      <div className=\"col-9\">\r\n        <div style={{backgroundColor:\"#E5F8FB\"}} >\r\n          <NameDescription />\r\n        </div>\r\n        <div className=\"col-12 bg-info\">\r\n          <NavigationBar handleInputValue={props.needHandlerToBePassedToNavigationBar}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Image from \"./Image\";\r\n\r\nconst ProjectCard = (props) => {\r\n  let counter = 0;\r\n  return (\r\n    <div className=\"card\">\r\n      <div id={\"heading\" + props.project.id}>\r\n        <button\r\n          className=\"btn btn-secondary btn-lg btn-block text-left\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target={\"#collapse\" + props.project.id}\r\n          aria-expanded=\"true\"\r\n          aria-controls={\"collapse\" + props.project.id}\r\n        >\r\n          {props.project.title}\r\n        </button>\r\n      </div>\r\n      <div\r\n        id={\"collapse\" + props.project.id}\r\n        className=\"collapse\"\r\n        aria-labelledby={\"heading\" + props.project.id}\r\n        data-parent=\"#accordionExample\"\r\n      >\r\n        <div className=\"card-body\">\r\n          <p>{props.project.description}</p>\r\n          <div className=\"row\">\r\n            <p className=\"col-12\">\r\n              Links:\r\n              <a href={props.project.deploy_link} className=\"text-primary\">\r\n                website\r\n              </a>\r\n              <a href={props.project.github_link} className=\"text-primary\">\r\n                github\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"row\">\r\n            {props.project.pictureurl.map((pictureUrl) => (\r\n              <Image key={pictureUrl + counter++} url={pictureUrl} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport projects from \"./projects.json\";\r\nimport ProjectCard from \"./projectCard\";\r\n\r\nconst Projects = () => {\r\n  return <div className=\"accordion\" id=\"accordionExample\">\r\n    {projects.map( project => <ProjectCard key={project.id} project={project}/>)}\r\n  </div>;\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${\"p2.jpg\"})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgoundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        height: \"70vh\",\r\n      }}\r\n      className=\"card tp-5 font-weight-bold\"\r\n      id=\"body\"\r\n    >\r\n      <h5 className=\"card-header text-uppercase text-white\">About Me</h5>\r\n      <div className=\"card-body\">\r\n        <p\r\n          style={{ fontSize: \"20px\" }}\r\n          className=\" text-white font-weight-bold text-white\"\r\n        >\r\n          Hello everyone!\r\n        </p>\r\n        <p\r\n          style={{ fontSize: \"20px\" }}\r\n          className=\" font-weight-bold text-white\"\r\n        >\r\n          I am Preeti Gupta, mother of two devilish children, who inspired me to\r\n          return to a job again after 10 years since my marriage.\r\n        </p>\r\n        <p\r\n          style={{ fontSize: \"20px\" }}\r\n          className=\" font-weight-bold text-white\"\r\n        >\r\n          Let me give a try to give you an image about me through my\r\n          self-description. As you already know, I am a mother of two kids amd\r\n          there are many things about me like I like to cook variety of foods,\r\n          like to read, think, dream. I love to listen music and I feel the\r\n          music flowing through my viens. I am fun loving, easy to go and fast\r\n          learner. I always enjoy programming. Before my mariage, I was working\r\n          in India as programmer. But after kids, I prefer job of mom over my\r\n          career. But now, as my kids are grown and always wants me to fulfil my\r\n          dream of being an awesome web developer, I want to enter again in this\r\n          world of coding. I am just someone who is right now learning coding in\r\n          bootcamp to live my dream. May be! I don't have much experience but\r\n          while doing the full time mom job I learned to manage many things and\r\n          experienced many aspects of life which I can implement in this coding\r\n          environment\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AboutMe;\r\n","import React from \"react\";\r\n\r\nconst Resume = () => {\r\n  return (\r\n    <div style={{height:'500px'}}>\r\n      <embed\r\n        style={{width:'100%',height:'100%'}}\r\n        src={process.env.PUBLIC_URL + \"pdf/PreetiGupta.pdf\"}\r\n        type=\"application/pdf\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Resume;\r\n","import React from 'react';\r\nconst Contact = ()=>{\r\n    return (\r\n        \r\n    <div className=\"card\" id=\"body\">\r\n        <h5 className=\"card-header\">Contact</h5>\r\n        <div className=\"card-body\">\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Your Name\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\">E-mail</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"name@example.com\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"subject\">Subject</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Subject\" required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"message\">Message</label>\r\n                <textarea className=\"form-control\" id=\"message\" rows=\"3\" required></textarea>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-info\" id=\"submitContact\">Submit</button>\r\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\" id=\"showMessage\">\r\n                <strong>Thanks for reaching out!</strong> I have recieved your message and will get back to you soon.\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" id=\"clearForm\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n );\r\n}\r\nexport default Contact;","import React from \"react\";\r\nimport Projects from \"./projects\";\r\nimport AboutMe from \"./aboutMeCard\";\r\nimport Resume from \"./resumeCard\";\r\nimport Contact from \"./contactCard\";\r\n\r\nconst Body = (props) => {\r\n  if (props.selection === \"aboutMe\") {\r\n    return (\r\n      <div>\r\n        <AboutMe /> \r\n      </div>\r\n     \r\n    )\r\n  }  else if (props.selection === \"projects\") {\r\n    return (\r\n      <div>\r\n        <Projects />\r\n      </div>\r\n    );\r\n  } else if (props.selection === \"resume\") {\r\n    return (\r\n      <div>\r\n        <Resume />\r\n      </div>\r\n    )\r\n  }\r\n  else if (props.selection === \"contact\") {\r\n    return (\r\n      <div>\r\n        <Contact />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n   \r\n\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div style={{backgroundColor:\"#2E4053\",height:\"50px\"}} className=\"card-footer\">\r\n    <p className=\"text-white text-center\">Welcome to my portfolio!</p>\r\n\r\n    \r\n    </div>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React,{useState} from \"react\";\n//import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\n\nconst App =()=> {\n  \nconst [currentSelection, setCurrentSelection] = useState('aboutMe')\n\nconst handlerForNavigationBar = (e) => { \n  e.preventDefault();\n  setCurrentSelection(e.currentTarget.dataset.div_id);    \n};\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n      <div className=\"bg-light\" style={{background: \"#A9ACE9\" }}>\n        <Header needHandlerToBePassedToNavigationBar={handlerForNavigationBar}/>\n        </div>\n        <div className=\"bg-dark\">\n          <Body selection= {currentSelection} />\n        </div>\n        <div >\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}